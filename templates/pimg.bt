#include <FileReference.bt>
#include <PackFile.bt>

FSeek(0);
PackFile pimgPackFile(0, FileSize());

if (pimgPackFile.chunk.header.magic == "PGTB")
{
    FSeek(startof(pimgPackFile.chunk.data));
    struct
    {
        struct
        {
            uint32 nbOfFormatRecord;
            uint32 offsetToFormatRecord;
            uint32 unknownNbOfRecords;
            uint32 unknownOffsetToRecords;
            uint32 nbOfPageRecords;
            uint32 offsetToPageRecords;
            uint32 unknown;
        } header;
        
        FSeek(startof(header.offsetToFormatRecord) + header.offsetToFormatRecord);
        struct
        {
            uint32 unknown1;
            uint32 unknown2;
            uint32 width;
            uint32 height;
            uint32 unknown3;
            char format1[4];
            char format2[4];
        } formatRecord[header.nbOfFormatRecord];

        FSeek(startof(header.offsetToPageRecords) + header.offsetToPageRecords);
        struct
        {
            uint32 formatRecordId;
            uint32 horizontalIndex;
            uint32 verticalIndex;
            uint32 offsetToFileReference;
            if (offsetToFileReference != 0)
            {
                FSeek(startof(offsetToFileReference) + offsetToFileReference);
                FileReference textureFileReference<read=readFileReference>;
                FSeek(startof(offsetToFileReference) + sizeof(offsetToFileReference));
            }
            uint32 isPlainColor;
            uint32 colorValue;
        } pageRecords[header.nbOfPageRecords]<optimize=false>;
    } pgtbChunk;
}